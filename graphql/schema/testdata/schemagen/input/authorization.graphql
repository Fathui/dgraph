type Todo @auth(
    query: {
        or: [
            { rule: "owner (filter: { username: { eq: $X_MyApp_User }})" },
            { rule: "sharedWith (filter: { username: { eq: $X_MyApp_User }})" },
            { rule: "(filter: { isPublic: true })" },
        ]
    },
    add: { rule: "owner (filter: { username: { eq: $X_MyApp_User }})" },
    update: { rule: "owner (filter: { username: { eq: $X_MyApp_User }})" },
) {
    id: ID!
    title: String
    text: String
    isPublic: Boolean @search
    dateCompleted: String @search @auth(
        update: { rule: "(filter: { dateCompleted: null })" }
    )
    sharedWith: [User]
    owner: User @hasInverse(field: "todos")
    somethingPrivate: String @auth(
        query: { rule: "owner (filter: { username: { eq: $X_MyApp_User }})" }
    )
}

type User @auth(
    update: { rule: "(filter: { username: { eq: $X_MyApp_User }})" }
){
    username: String! @id
    todos: [Todo]
}
